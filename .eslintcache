[{"/home/aravind/practice/rocket-lane/src/index.js":"1","/home/aravind/practice/rocket-lane/src/reportWebVitals.js":"2","/home/aravind/practice/rocket-lane/src/App.js":"3","/home/aravind/practice/rocket-lane/src/components/EmojiButton.js":"4","/home/aravind/practice/rocket-lane/src/components/Login.js":"5","/home/aravind/practice/rocket-lane/src/utils/api.js":"6","/home/aravind/practice/rocket-lane/src/components/ContentWrapper.js":"7","/home/aravind/practice/rocket-lane/src/components/Content.js":"8","/home/aravind/practice/rocket-lane/src/components/Summary.js":"9","/home/aravind/practice/rocket-lane/src/components/User.js":"10"},{"size":500,"mtime":1612150748518,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1612150748518,"results":"13","hashOfConfig":"12"},{"size":2708,"mtime":1612620209313,"results":"14","hashOfConfig":"12"},{"size":1561,"mtime":1612621556905,"results":"15","hashOfConfig":"12"},{"size":663,"mtime":1612620306955,"results":"16","hashOfConfig":"12"},{"size":2053,"mtime":1612543591893,"results":"17","hashOfConfig":"12"},{"size":731,"mtime":1612620370427,"results":"18","hashOfConfig":"12"},{"size":1560,"mtime":1612621393369,"results":"19","hashOfConfig":"12"},{"size":1489,"mtime":1612621714996,"results":"20","hashOfConfig":"12"},{"size":336,"mtime":1612540368842,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1db5rsv",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},"/home/aravind/practice/rocket-lane/src/index.js",[],["47","48"],"/home/aravind/practice/rocket-lane/src/reportWebVitals.js",[],"/home/aravind/practice/rocket-lane/src/App.js",["49","50","51","52","53","54"],"import \"./App.css\";\nimport React from \"react\";\nimport Login from \"./components/Login\";\nimport ContentView from \"./components/ContentWrapper\";\n\nimport api from \"./utils/api\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      users: [],\n      reactedUsers: [],\n      reactions: [],\n      contents: [],\n      selectedSummary:null\n    };\n  }\n\n  async componentDidMount() {\n    const users = await api.getAllUsers();\n    const reactions = await api.getReactions();\n    const reactedUsers = await api.getReactedDetails();\n    const contents = await api.getAllContent();\n    this.setState({ users, reactedUsers, reactions, contents });\n  }\n  handleLogin(data) {\n    this.setState({ user: data });\n  }\n  selectSummary(id){\n    console.log(id);\n    this.setState({selectedSummary:id})\n  }\n  async reactionHandler(emoji, user, content) {\n    const { reactedUsers } = this.state;\n    //deep clone the object\n    const temp = JSON.parse(JSON.stringify(reactedUsers));\n    const reactions = reactedUsers.filter(\n      (r) => r.user_id == user.id && r.content_id == content.id\n    );\n    const payload = {\n      user_id: user.id,\n      reaction_id: emoji.id,\n      content_id: content.id,\n    };\n    if (reactions.length == 0) {\n      const data = await api.postReaction(payload);\n      temp.push(data);\n      this.setState({ reactedUsers: temp });\n      console.log(\"post\", data);\n    } else {\n      const reaction = reactions.find((r) => r.reaction_id == emoji.id);\n      if (reaction) {\n        const data = await api.deleteReaction(reaction.id);\n        this.setState({\n          reactedUsers: temp.filter((t) => t.id != reactions[0].id),\n        });\n        console.log(\"delete\", data);\n      } else {\n        const data = await api.updateReaction(reactions[0].id, payload);\n        this.setState({\n          reactedUsers: [...temp.filter((t) => t.id != reactions[0].id), data],\n        });\n        console.log(\"update\", data);\n      }\n    }\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.user ? (\n          <ContentView\n            reactionHandler={(emji, user, content) =>\n              this.reactionHandler(emji, user, content)\n            }\n            selectSummary={(id)=>this.selectSummary(id)}\n            selectedSummary={this.state.selectedSummary}\n            contents={this.state.contents}\n            user={this.state.user}\n            users={this.state.users}\n            reactions={this.state.reactions}\n            reactedUsers={this.state.reactedUsers}\n          />\n        ) : (\n          <Login handleLogin={(d) => this.handleLogin(d)} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/home/aravind/practice/rocket-lane/src/components/EmojiButton.js",["55","56","57","58","59","60"],"import React, { useState } from \"react\";\nimport Summary from \"./Summary\";\n\nexport default function EmojiButton(props) {\n  const {\n    reactedUsers = [],\n    content,\n    user,\n    reactionHandler = () => {},\n    emojis = [],\n    selectSummary,\n    selectedSummary,\n  } = props;\n  const handleClick = (e) => {\n    reactionHandler(e, user, content);\n  };\n\n  return (\n    <div style={{ position: \"relative\" }} className=\"wrapper\">\n      {selectedSummary == content.id && <Summary {...props} />}\n      {reactedUsers\n        .filter((ru) => ru.content_id == content.id && ru.user_id == user.id)\n        .map((ru) => (\n          <button\n            onClick={(event) => {\n              selectSummary(ru.content_id);\n              event.stopPropagation();\n            }}\n            key={ru.id}\n            className={\"reaction\"}\n          >\n            {emojis.find((e) => e.id == ru.reaction_id) &&\n              emojis.find((e) => e.id == ru.reaction_id).emoji}{\" \"}\n            . 1\n          </button>\n        ))}\n      <div className=\"box\">\n        <div className=\"smily-wrapper label-reactions\">\n          <button className=\"btn\">üëç</button>\n        </div>\n        <div className=\"toolbox\"></div>\n        {emojis.map((e, i) => (\n          <button\n            onClick={() => handleClick(e)}\n            key={e.id}\n            style={{ left: i * 50 + \"px\" }}\n            className={\"reaction-\" + e.name}\n          >\n            {e.emoji}\n            <span className=\"legend-reaction\">{e.name}</span>\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n}\n","/home/aravind/practice/rocket-lane/src/components/Login.js",[],"/home/aravind/practice/rocket-lane/src/utils/api.js",[],"/home/aravind/practice/rocket-lane/src/components/ContentWrapper.js",["61"],"import React from \"react\";\nimport Content from \"./Content\";\nfunction ContentWrapper({\n  contents,\n  user,\n  users,\n  reactedUsers,\n  reactions,\n  reactionHandler,\n  selectSummary,\n  selectedSummary,\n}) {\n  return (\n    <section className=\"container\" onClick={() => selectSummary(null)}>\n      {contents.map((c) => (\n        <Content\n          key={c.id}\n          content={c}\n          reactions={reactions}\n          user={user}\n          users={users}\n          reactionHandler={reactionHandler}\n          reactedUsers={reactedUsers.filter((r) => r.content_id == c.id)}\n          selectSummary={selectSummary}\n          selectedSummary={selectedSummary}\n        />\n      ))}\n    </section>\n  );\n}\n\nexport default ContentWrapper;\n","/home/aravind/practice/rocket-lane/src/components/Content.js",[],"/home/aravind/practice/rocket-lane/src/components/Summary.js",["62","63","64","65","66","67","68","69","70"],"/home/aravind/practice/rocket-lane/src/components/User.js",["71"],"import React from \"react\";\n\nexport default function User({ user, emoji }) {\n  return (\n    <div className=\"user\">\n      <img className=\"avatar\" src={user.avatar} />\n      <div style={{ fontSize: \"x-large\", paddingRight: \"1rem\" }}>\n        {emoji.emoji}\n      </div>\n      <div>{user.first_name + user.last_name}</div>\n    </div>\n  );\n}\n",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":39,"column":24,"nodeType":"78","messageId":"79","endLine":39,"endColumn":26},{"ruleId":"76","severity":1,"message":"77","line":39,"column":51,"nodeType":"78","messageId":"79","endLine":39,"endColumn":53},{"ruleId":"76","severity":1,"message":"77","line":46,"column":26,"nodeType":"78","messageId":"79","endLine":46,"endColumn":28},{"ruleId":"76","severity":1,"message":"77","line":52,"column":60,"nodeType":"78","messageId":"79","endLine":52,"endColumn":62},{"ruleId":"76","severity":1,"message":"80","line":56,"column":49,"nodeType":"78","messageId":"79","endLine":56,"endColumn":51},{"ruleId":"76","severity":1,"message":"80","line":62,"column":53,"nodeType":"78","messageId":"79","endLine":62,"endColumn":55},{"ruleId":"81","severity":1,"message":"82","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":25},{"ruleId":"76","severity":1,"message":"77","line":20,"column":24,"nodeType":"78","messageId":"79","endLine":20,"endColumn":26},{"ruleId":"76","severity":1,"message":"77","line":22,"column":39,"nodeType":"78","messageId":"79","endLine":22,"endColumn":41},{"ruleId":"76","severity":1,"message":"77","line":22,"column":67,"nodeType":"78","messageId":"79","endLine":22,"endColumn":69},{"ruleId":"76","severity":1,"message":"77","line":32,"column":38,"nodeType":"78","messageId":"79","endLine":32,"endColumn":40},{"ruleId":"76","severity":1,"message":"77","line":33,"column":39,"nodeType":"78","messageId":"79","endLine":33,"endColumn":41},{"ruleId":"76","severity":1,"message":"77","line":23,"column":65,"nodeType":"78","messageId":"79","endLine":23,"endColumn":67},{"ruleId":"76","severity":1,"message":"77","line":7,"column":13,"nodeType":"78","messageId":"79","endLine":7,"endColumn":15},{"ruleId":"76","severity":1,"message":"77","line":8,"column":25,"nodeType":"78","messageId":"79","endLine":8,"endColumn":27},{"ruleId":"76","severity":1,"message":"77","line":8,"column":56,"nodeType":"78","messageId":"79","endLine":8,"endColumn":58},{"ruleId":"76","severity":1,"message":"77","line":19,"column":26,"nodeType":"78","messageId":"79","endLine":19,"endColumn":28},{"ruleId":"76","severity":1,"message":"77","line":25,"column":28,"nodeType":"78","messageId":"79","endLine":25,"endColumn":30},{"ruleId":"76","severity":1,"message":"77","line":35,"column":37,"nodeType":"78","messageId":"79","endLine":35,"endColumn":39},{"ruleId":"76","severity":1,"message":"77","line":35,"column":68,"nodeType":"78","messageId":"79","endLine":35,"endColumn":70},{"ruleId":"76","severity":1,"message":"77","line":45,"column":44,"nodeType":"78","messageId":"79","endLine":45,"endColumn":46},{"ruleId":"76","severity":1,"message":"77","line":46,"column":42,"nodeType":"78","messageId":"79","endLine":46,"endColumn":44},{"ruleId":"85","severity":1,"message":"86","line":6,"column":7,"nodeType":"87","endLine":6,"endColumn":51},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]